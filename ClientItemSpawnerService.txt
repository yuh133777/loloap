local ItemSpawnerServiceData = game.ReplicatedStorage:WaitForChild("ItemSpawnerServiceData")
local SpawnersFolder = ItemSpawnerServiceData:WaitForChild("SpawnersFolder")
local Folder_upvr = Instance.new("Folder", workspace)
Folder_upvr.Name = "SpawnedItems"
local tbl_upvr = {
	LoadedItems = {};
	ItemSpawners = {};
	IDLookup = setmetatable({}, {
		__mode = 'v';
	});
}
local function SpawnerCreated_upvr(arg1) -- Line 22, Named "SpawnerCreated"
	--[[ Upvalues[1]:
		[1]: tbl_upvr (readonly)
	]]
	-- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
	local tbl_upvr_2 = {
		Assets = {};
		SpawnedItems = {};
	}
	tbl_upvr.ItemSpawners[arg1.Name] = tbl_upvr_2
	if arg1:FindFirstChild("ClientHandler") then
		tbl_upvr_2.ClientHandler = require(arg1:FindFirstChild("ClientHandler"))(tbl_upvr_2, tbl_upvr)
	else
		arg1.ChildAdded:Connect(function(arg1_2) -- Line 33
			--[[ Upvalues[2]:
				[1]: tbl_upvr_2 (readonly)
				[2]: tbl_upvr (copied, readonly)
			]]
			if arg1_2.Name == "ClientHandler" then
				if tbl_upvr_2.ClientHandler and tbl_upvr_2.ClientHandler.Destroy then
					tbl_upvr_2.ClientHandler.Destroy()
				end
				tbl_upvr_2.ClientHandler = require(arg1_2)(tbl_upvr_2, tbl_upvr)
			end
		end)
	end
	local Assets = arg1:WaitForChild("Assets")
	for _, v in pairs(Assets:GetChildren()) do
		(function(arg1_3) -- Line 45, Named "AddedAsset"
			--[[ Upvalues[1]:
				[1]: tbl_upvr_2 (readonly)
			]]
			if arg1_3.Value then
				tbl_upvr_2.Assets[arg1_3.Name] = arg1_3.Value
			end
			arg1_3.Changed:Connect(function(arg1_4) -- Line 53
				--[[ Upvalues[2]:
					[1]: tbl_upvr_2 (copied, readonly)
					[2]: arg1_3 (readonly)
				]]
				tbl_upvr_2.Assets[arg1_3.Name] = arg1_4
			end)
		end)(v)
		local var25
	end
	Assets.ChildAdded:Connect(var25)
end
for _, v_2 in pairs(SpawnersFolder:GetChildren()) do
	SpawnerCreated_upvr(v_2)
end
SpawnersFolder.ChildAdded:Connect(function(arg1) -- Line 70
	--[[ Upvalues[1]:
		[1]: SpawnerCreated_upvr (readonly)
	]]
	SpawnerCreated_upvr(arg1)
end)
function tbl_upvr.ItemsUpdated(arg1, arg2) -- Line 82
	--[[ Upvalues[2]:
		[1]: tbl_upvr (readonly)
		[2]: Folder_upvr (readonly)
	]]
	local var34 = tbl_upvr.ItemSpawners[arg1]
	local SpawnedItems = var34.SpawnedItems
	local ClientHandler = var34.ClientHandler
	for _, v_3 in arg2 do
		for i_4, v_4 in v_3 do
			local var37 = SpawnedItems[i_4]
			if var37 then
				ClientHandler.Update(var37, v_4)
			else
				SpawnedItems[i_4] = v_4
				if not v_4.asset then
					v_4.Instance = var34.Assets.Default:Clone()
				else
					v_4.Instance = var34.Assets[v_4.asset].Value:Clone()
				end
				v_4.Instance.Parent = Folder_upvr
				ClientHandler.Streamed(v_4)
			end
		end
	end
end
function tbl_upvr.ItemsRemoved(arg1, arg2) -- Line 115
	--[[ Upvalues[1]:
		[1]: tbl_upvr (readonly)
	]]
	local _ = tbl_upvr.ItemSpawners[arg1]
	for _, _ in arg2 do
	end
end
ItemSpawnerServiceData:WaitForChild("StreamingRemote").OnClientEvent:Connect(function(arg1, arg2) -- Line 134
	--[[ Upvalues[1]:
		[1]: tbl_upvr (readonly)
	]]
	if arg2.Update then
		tbl_upvr.ItemsUpdated(arg1, arg2.Update)
	end
	if arg2.Remove then
		tbl_upvr.ItemsRemoved(arg1, arg2.Remove)
	end
end)