local tbl_3 = {
	Premium = {
		Value = 5;
		Name = "Premium";
	};
	Mythical = {
		Value = 4;
		Name = "Mythical";
	};
	Legendary = {
		Value = 3;
		Name = "Legendary";
	};
	Rare = {
		Value = 2;
		Name = "Rare";
	};
	Uncommon = {
		Value = 1;
		Name = "Uncommon";
	};
	Common = {
		Value = 0;
		Name = "Common";
	};
}
local DragonNames_upvr = require(game.ReplicatedStorage.Modules.Asset.DragonNames)
local tbl_4 = {
	M1 = {
		Images = {
			["845x845"] = "rbxassetid://18522363952";
			["34x34"] = "rbxassetid://110722339497487";
			["100x100"] = "rbxassetid://124422403020828";
		};
		Text = "Can M1";
	};
	Elemental = {
		Images = {
			["845x845"] = "rbxassetid://18522364171";
			["34x34"] = "rbxassetid://99096073700387";
			["100x100"] = "rbxassetid://116857012834974";
		};
		Text = "Immune to weak attacks";
	};
	Transformation = {
		Images = {
			["845x845"] = "rbxassetid://18522364352";
			["34x34"] = "rbxassetid://116255990226292";
			["100x100"] = "rbxassetid://85635919480021";
		};
		Text = "Can transform";
	};
	Awakening = {
		Images = {
			["845x845"] = "rbxassetid://18556567876";
			["34x34"] = "rbxassetid://138098911321101";
			["100x100"] = "rbxassetid://93842515161395";
		};
		Text = "Unlockable awakening";
	};
}
local tbl_2_upvr = {}
for i, v in pairs({
	["Rocket-Rocket"] = {
		Rarity = tbl_3.Common;
		Description = "Grants explosive movement abilities, allowing quick travel and attacks.";
	};
	["Spin-Spin"] = {
		Rarity = tbl_3.Common;
		Description = "Provides spinning attacks which will injure enemies with razor sharp wind slashes.";
	};
	["Blade-Blade"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user a body of blades, offering immunity to sword attacks and sharp striking abilities.";
		Elements = {
			Elemental = {
				Text = "Immune to sword attacks";
			};
			M1 = {};
		};
	};
	["Spring-Spring"] = {
		Rarity = tbl_3.Common;
		Description = "Offers spring-like movement and bouncing attacks.";
	};
	["Bomb-Bomb"] = {
		Rarity = tbl_3.Common;
		Description = "Provides the user with a wide range of explosive attacks.";
	};
	["Smoke-Smoke"] = {
		Rarity = tbl_3.Common;
		Description = "Offers the user an arsenal of smoke attacks, and is useful for grinding as a new player.";
		Elements = {
			Elemental = {};
		};
	};
	["Spike-Spike"] = {
		Rarity = tbl_3.Common;
		Description = "Grants the user sharp spikes on their body, full of offensive attacks skills.";
	};
	["Flame-Flame"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Enables the user to control and create fire, forcing enemies to steer clear if you don't want to burn.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Falcon-Falcon"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Gives the user wings, and bird-like attacks.";
	};
	["Ice-Ice"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Allows the user to manipulate ice, freezing their foes in place.";
		Elements = {
			M1 = {};
			Elemental = {};
			Awakening = {};
		};
	};
	["Sand-Sand"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Grants control over sand, with abilities to trap and attack.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Dark-Dark"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Provides darkness-based abilities which pull enemies in closer to you.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Diamond-Diamond"] = {
		Rarity = tbl_3.Uncommon;
		Description = "Turns the user into diamond, enhancing defense and providing sharp attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Light-Light"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants light-speed movement and powerful light-based attacks.";
		Elements = {
			Elemental = {};
			M1 = {};
			Awakening = {};
		};
	};
	["Rubber-Rubber"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants the user a rubber body, immune to electric attacks and stretchy enough to deal a barrage of offensive attacks.";
		Elements = {
			M1 = {};
		};
	};
	["Barrier-Barrier"] = {
		Rarity = tbl_3.Rare;
		Description = " Creates barriers for defense and can trap enemies.";
	};
	["Ghost-Ghost"] = {
		Rarity = tbl_3.Rare;
		Description = "Allows the user to transcend the barrier between life and death, granting an extra life and paranormal abilities.";
	};
	["Magma-Magma"] = {
		Rarity = tbl_3.Rare;
		Description = "Grants magma-based attacks that deal high damage and burn enemies.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Quake-Quake"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides the ability to create shockwaves, dealing massive area damage.";
		Elements = {
			Awakening = {};
		};
	};
	["Buddha-Buddha"] = {
		Rarity = tbl_3.Legendary;
		Description = "Transforms the user into a giant Buddha, increasing the users size, power, and defense, making it perfect for farming.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {};
		};
	};
	["Love-Love"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use charming abilities to debuff enemies, and to summon your Besto Friendo.";
	};
	["Spider-Spider"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants spider-like abilities, including web attacks and agility.";
		Elements = {
			Awakening = {};
		};
	};
	["Sound-Sound"] = {
		Rarity = tbl_3.Legendary;
		Description = "Use instrument based attacks, or ride along sheets of music to power-up this Fruit. ";
	};
	["Phoenix-Phoenix"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants regenerative abilities, powerful fire-based attacks, and the ability to transform into full body Phoenix.";
		Elements = {
			Transformation = {};
			Awakening = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Portal-Portal"] = {
		Rarity = tbl_3.Legendary;
		Description = "Allows the user to instantly travel to any location, or create a portal to a dimension of their own.";
		Elements = {
			M1 = {};
		};
	};
	["Rumble-Rumble"] = {
		Rarity = tbl_3.Legendary;
		Description = "Provides electric-based attacks, which have stun based effects.";
		Elements = {
			Elemental = {};
			Awakening = {};
		};
	};
	["Pain-Pain"] = {
		Rarity = tbl_3.Legendary;
		Description = "Inflicts pain-based attacks, causing damage over time.";
	};
	["Blizzard-Blizzard"] = {
		Rarity = tbl_3.Legendary;
		Description = "Grants control over powerful ice storms, which can be used to blind your enemies. ";
		Elements = {
			Elemental = {};
		};
	};
	["Gravity-Gravity"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to manipulate gravity, controlling the battlefield.";
	};
	["Mammoth-Mammoth"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mammoth, providing strength and size.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["T-Rex-T-Rex"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a T-Rex, granting powerful close-range attacks.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	["Dough-Dough"] = {
		Rarity = tbl_3.Mythical;
		Description = "Provides sticky and flexible dough-based attacks.";
		Elements = {
			Awakening = {};
			Elemental = {};
			M1 = {
				Text = "Can M1 awakened";
			};
		};
	};
	["Shadow-Shadow"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants life-leeching abilities, useful for tactical takedowns of your enemies.";
	};
	["Venom-Venom"] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a venomous hydra, granting the user poison-based attacks that damage over time.";
		Elements = {
			Transformation = {};
		};
	};
	["Control-Control"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to control objects and enemies within a specified area.";
	};
	["Gas-Gas"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to exhale clouds of explosive gas and transform into a powerful gaseous knight.";
		Elements = {
			Transformation = {};
			M1 = {};
			Elemental = {};
		};
	};
	["Spirit-Spirit"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants the user the ability to manipulate spirits, which can offer the user heavenly buffs to themselves or disastrous traps to their enemies.";
		Elements = {
			M1 = {};
		};
	};
	["Yeti-Yeti"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a hulking snow beast with cold attacks and ground-shaking strength.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Leopard-Leopard"] = {
		Rarity = tbl_3.Mythical;
		Description = "Allows the user to turn into a leopard, granting enhanced agility and powerful melee attacks.";
		Elements = {
			Transformation = {};
			M1 = {
				Text = "Can M1 transformed";
			};
		};
	};
	["Kitsune-Kitsune"] = {
		Rarity = tbl_3.Mythical;
		Description = "Grants fox-like abilities, with amazing agility and blue fire-based attacks. Damage enemies to fully transform into the mythical Kitsune.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
	[DragonNames_upvr.Permanent] = {
		Rarity = tbl_3.Mythical;
		Description = "Transforms the user into a mighty dragon, allowing them to rule over the skies with scorching flames.";
		Elements = {
			Transformation = {};
			M1 = {};
		};
	};
}) do
	local tbl = {
		Elements = {};
		Description = v.Description;
		Rarity = assert(v.Rarity);
	}
	if v.Elements then
		for i_2, v_2 in pairs(v.Elements) do
			local assert_result1 = assert(tbl_4[i_2], `Element has no ElementInfo {i_2}`)
			local tbl_5 = {}
			local Images = v_2.Images
			if not Images then
				Images = assert_result1.Images
			end
			tbl_5.Images = Images
			Images = v_2.Text
			local var112 = Images
			if not var112 then
				var112 = assert_result1.Text
			end
			tbl_5.Text = var112
			tbl.Elements[i_2] = tbl_5
		end
	end
	tbl_2_upvr[i] = tbl
end
function get(arg1) -- Line 399
	--[[ Upvalues[2]:
		[1]: tbl_2_upvr (readonly)
		[2]: DragonNames_upvr (readonly)
	]]
	local var113
	if not tbl_2_upvr[arg1] and (var113 == DragonNames_upvr.West or var113 == DragonNames_upvr.East) then
		var113 = DragonNames_upvr.Permanent
	end
	return assert(tbl_2_upvr[var113], var113)
end
return {
	List = tbl_2_upvr;
	Elements = tbl_4;
	getNames = function() -- Line 416, Named "getNames"
		--[[ Upvalues[1]:
			[1]: tbl_2_upvr (readonly)
		]]
		local module = {}
		for i_3, _ in pairs(tbl_2_upvr) do
			table.insert(module, i_3)
		end
		return module
	end;
	Get = function(arg1, arg2) -- Line 423, Named "Get"
		return get(arg2)
	end;
	TryGet = function(arg1, arg2) -- Line 426, Named "TryGet"
		local var123_upvw
		local _, _ = pcall(function() -- Line 428
			--[[ Upvalues[2]:
				[1]: var123_upvw (read and write)
				[2]: arg2 (readonly)
			]]
			var123_upvw = get(arg2)
		end)
		return var123_upvw
	end;
}